{"ast":null,"code":"import _objectSpread from \"/Data/React/finexus-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Data/React/finexus-app/src/App.js\";\nimport React from 'react';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: \"00\",\n      minutes: \"01\",\n      // initial 5 minutes\n      isResend: false,\n      // is otp resend button clicked\n      isMainTimerUsed: false // check 5 minutes countdown is used\n\n    };\n    this.secondsRemaining = \"\";\n    this.intervalHandle = \"\";\n    this.countdown = this.countdownFn.bind(this);\n    this.counter = this.counter.bind(this);\n    this.countdown(); // called 5 minutes countdown\n  }\n  /**\n   * Counter\n   */\n\n\n  counter() {\n    this.setState({\n      isResend: false\n    });\n    var min = Math.floor(this.secondsRemaining / 60);\n    var sec = this.secondsRemaining - min * 60;\n    this.setState({\n      minutes: min,\n      seconds: sec\n    });\n\n    if (sec < 10) {\n      this.setState({\n        seconds: \"0\" + this.state.seconds\n      });\n    }\n\n    if (min < 10) {\n      this.setState({\n        minutes: \"0\" + min\n      });\n    }\n\n    if (min === 0 & sec === 0) {\n      this.setState(_objectSpread({}, this.state, {\n        isResend: true\n      }));\n      clearInterval(this.intervalHandle);\n      this.setState(_objectSpread({}, this.state, {\n        isMainTimerUsed: true\n      }));\n    }\n\n    this.secondsRemaining--;\n  }\n  /**\n   * \n   */\n\n\n  countdownFn() {\n    let time = this.state.isMainTimerUsed ? \"03\" : this.state.minutes;\n    this.secondsRemaining = time * 60;\n    this.intervalHandle = setInterval(this.counter, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Your OTP is expiring in \", React.createElement(\"span\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.minutes, \":\", this.state.seconds)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.state.isResend,\n      onClick: this.countdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Resend OTP\"));\n  }\n\n}","map":{"version":3,"sources":["/Data/React/finexus-app/src/App.js"],"names":["React","App","Component","constructor","props","state","seconds","minutes","isResend","isMainTimerUsed","secondsRemaining","intervalHandle","countdown","countdownFn","bind","counter","setState","min","Math","floor","sec","clearInterval","time","setInterval","render","textAlign","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAE,IADA;AAETC,MAAAA,OAAO,EAAE,IAFA;AAEO;AAChBC,MAAAA,QAAQ,EAAE,KAHD;AAGQ;AACjBC,MAAAA,eAAe,EAAE,KAJR,CAIe;;AAJf,KAAX;AAMA,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AAEA,SAAKC,SAAL,GAAiB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AAEA,SAAKF,SAAL,GAdgB,CAcI;AACrB;AAED;;;;;AAGAG,EAAAA,OAAO,GAAE;AACP,SAAKC,QAAL,CAAc;AACZR,MAAAA,QAAQ,EAAE;AADE,KAAd;AAIA,QAAIS,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKT,gBAAL,GAAwB,EAAnC,CAAV;AACA,QAAIU,GAAG,GAAG,KAAKV,gBAAL,GAAyBO,GAAG,GAAG,EAAzC;AAEA,SAAKD,QAAL,CAAc;AACZT,MAAAA,OAAO,EAAEU,GADG;AAEZX,MAAAA,OAAO,EAAEc;AAFG,KAAd;;AAKA,QAAIA,GAAG,GAAG,EAAV,EAAc;AACZ,WAAKJ,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWC;AADd,OAAd;AAGD;;AACD,QAAIW,GAAG,GAAG,EAAV,EAAc;AACd,WAAKD,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE,MAAMU;AADH,OAAd;AAGC;;AAED,QAAIA,GAAG,KAAK,CAAR,GAAYG,GAAG,KAAK,CAAxB,EAA2B;AACzB,WAAKJ,QAAL,mBACK,KAAKX,KADV;AACgBG,QAAAA,QAAQ,EAAC;AADzB;AAIAa,MAAAA,aAAa,CAAC,KAAKV,cAAN,CAAb;AAEA,WAAKK,QAAL,mBACK,KAAKX,KADV;AACgBI,QAAAA,eAAe,EAAC;AADhC;AAID;;AAED,SAAKC,gBAAL;AACD;AAED;;;;;AAGAG,EAAAA,WAAW,GAAG;AACZ,QAAIS,IAAI,GAAG,KAAKjB,KAAL,CAAWI,eAAX,GAA2B,IAA3B,GAAgC,KAAKJ,KAAL,CAAWE,OAAtD;AACA,SAAKG,gBAAL,GAAwBY,IAAI,GAAG,EAA/B;AACA,SAAKX,cAAL,GAAsBY,WAAW,CAAC,KAAKR,OAAN,EAAe,IAAf,CAAjC;AACD;;AAEDS,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA+B;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKrB,KAAL,CAAWE,OAA/C,OAAyD,KAAKF,KAAL,CAAWC,OAApE,CAA/B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWG,QAA9B;AAAwC,MAAA,OAAO,EAAE,KAAKI,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAOD;;AA9E6C","sourcesContent":["import React from 'react'\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state={\n      seconds: \"00\",\n      minutes: \"01\",  // initial 5 minutes\n      isResend: false, // is otp resend button clicked\n      isMainTimerUsed: false  // check 5 minutes countdown is used\n    }\n    this.secondsRemaining = \"\"; \n    this.intervalHandle = \"\";\n\n    this.countdown = this.countdownFn.bind(this);\n    this.counter = this.counter.bind(this);\n\n    this.countdown();   // called 5 minutes countdown\n  }\n\n  /**\n   * Counter\n   */\n  counter(){\n    this.setState({\n      isResend: false\n    })\n\n    var min = Math.floor(this.secondsRemaining / 60);\n    var sec = this.secondsRemaining - (min * 60);\n\n    this.setState({\n      minutes: min,\n      seconds: sec\n    })\n\n    if (sec < 10) {\n      this.setState({\n        seconds: \"0\" + this.state.seconds,\n      })\n    }\n    if (min < 10) {\n    this.setState({\n      minutes: \"0\" + min,\n     })\n    }\n\n    if (min === 0 & sec === 0) {\n      this.setState({\n        ...this.state,isResend:true\n      })\n\n      clearInterval(this.intervalHandle);\n      \n      this.setState({\n        ...this.state,isMainTimerUsed:true\n      })\n\n    }\n\n    this.secondsRemaining--\n  }\n\n  /**\n   * \n   */\n  countdownFn() {\n    let time = this.state.isMainTimerUsed?\"03\":this.state.minutes;\n    this.secondsRemaining = time * 60;\n    this.intervalHandle = setInterval(this.counter, 1000);\n  }\n\n  render(){\n    return (\n      <div style={{textAlign: 'center',}}>\n        <label>Your OTP is expiring in <span style={{fontWeight: 'bold'}}>{this.state.minutes}:{this.state.seconds}</span></label>\n        <br />\n        <button disabled={!this.state.isResend} onClick={this.countdown}>Resend OTP</button>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}